// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(uuid()) 
  email       String    @unique
  password    String?
  isGoogleUser Boolean  @default(false)    
  isEmailVerified  Boolean   @default(false)
  isAdmin Boolean @default(false)
  refreshToken  String? 
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  profile   Profile?
  otp       Otp?
  role      UserRoleEnum    @default(USER)
}

model Profile {
  id          String    @id @default(uuid()) 
  user  User  @relation(fields: [userId], references: [id])  
  userId  String  @unique
  profilePicUri   String?
  mobileNumber    String?
  isMobileNumberVerified  Boolean @default(false)
  firstName   String?
  lastName   String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  artwork     ArtWork[]
}

model Otp {
  id    String    @id @default(uuid())
  user  User  @relation(fields: [userId], references: [id])  
  userId  String  @unique
  otp     String
  createdAt  DateTime  @default(now())
}

model Category{
  id          String    @id @default(uuid())
  name        String
  detail      String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model ArtWork {
  id          String    @id @default(uuid())
  title       String
  detail      String
  imageUri    String
  OwnerProfile  Profile  @relation(fields: [ownerProfileId], references: [id])
  ownerProfileId  String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model ArtWork_Category{
  id          String    @id @default(uuid())
  artwork_id  String
  category_id String
}

enum UserRoleEnum {
  ADMIN
  USER
}
